{
	"name": "vscode-typescript-exportallmodules",
	"displayName": "TypeScript Barrel Generator",
	"description": "VSCode extension which generates a barrel `index.ts` file with all the module exports from the current directory.",
	"version": "2.1.0",
	"icon": "assets/export-all.png",
	"publisher": "eliostruyf",
	"galleryBanner": {
		"color": "#011627",
		"theme": "dark"
	},
	"badges": [
		{
			"description": "version",
			"url": "https://img.shields.io/github/package-json/v/estruyf/vscode-typescript-exportallmodules?color=green&label=vscode-front-matter&style=flat-square",
			"href": "https://github.com/estruyf/vscode-typescript-exportallmodules"
		}
	],
	"engines": {
		"vscode": "^1.35.0"
	},
	"categories": [
		"Other"
	],
	"keywords": [
		"TypeScript",
		"export",
		"barrel"
	],
	"license": "MIT",
	"repository": {
		"type": "git",
		"url": "https://github.com/estruyf/vscode-typescript-exportallmodules"
	},
	"activationEvents": [
		"*",
		"onCommand:exportall.generate"
	],
	"main": "./out/extension.js",
	"contributes": {
		"commands": [
			{
				"command": "exportall.generate",
				"title": "TypeScript: Export all modules"
			},
			{
				"command": "exportall.addFolder",
				"title": "TypeScript: Add listener to the folder"
			},
			{
				"command": "exportall.removeFolder",
				"title": "Remove listener from the folder"
			},
			{
				"command": "exportall.excludeFolder",
				"title": "TypeScript: Exclude folder from export"
			},
			{
				"command": "exportall.excludeFile",
				"title": "TypeScript: Exclude file from export"
			},
			{
				"command": "exportall.includeFolderFile",
				"title": "Include to export"
			},
			{
				"command": "exportall.refreshView",
				"title": "Refresh"
			}
		],
		"menus": {
			"explorer/context": [
				{
					"command": "exportall.generate",
					"when": "explorerResourceIsFolder",
					"group": "TypeScript@1"
				},
				{
					"command": "exportall.addFolder",
					"when": "explorerResourceIsFolder",
					"group": "TypeScript@2"
				},
				{
					"command": "exportall.excludeFolder",
					"when": "explorerResourceIsFolder && config.exportall.config.includeFoldersToExport",
					"group": "TypeScript@3"
				},
				{
					"command": "exportall.excludeFile",
					"when": "resourceExtname == .ts || resourceExtname == .tsx",
					"group": "TypeScript@4"
				}
			],
			"view/title": [
				{
					"command": "exportall.refreshView",
					"when": "view == exportall.view"
				}
			],
			"view/item/context": [
				{
					"command": "exportall.removeFolder",
					"when": "view == exportall.view && viewItem == exportall.listener && viewItem != exportall.header",
					"group": "TypeScript@1"
				},
				{
					"command": "exportall.includeFolderFile",
					"when": "view == exportall.view && viewItem == exportall.excluded && viewItem != exportall.header",
					"group": "TypeScript@2"
				}
			]
		},
		"configuration": [
			{
				"type": "object",
				"title": "Export all modules",
				"properties": {
					"exportall.config.exclude": {
						"type": "array",
						"default": [
							".test.",
							".spec."
						],
						"description": "Specify which files you want to exclude the `index.ts` file. Works on the whole name or part of the name."
					},
					"exportall.config.relExclusion": {
						"type": "array",
						"default": [],
						"description": "Specify the relative folder/file paths to exclude from the export."
					},
					"exportall.config.includeFoldersToExport": {
						"type": "boolean",
						"default": true,
						"description": "Specify if you want to include folder as well to the module export. Will only be applied if folder contains a `index.ts` file."
					},
					"exportall.config.folderListener": {
						"type": "array",
						"default": [],
						"description": "Specify the relative paths for the folder listeners. This will make it possible to automatically generate the module export once a file gets added/updated/removed within the specified folder."
					},
					"exportall.config.semis": {
						"type": "boolean",
						"default": true,
						"description": "Specify if you want to enable/disable the usage of semis in the barrel file."
					}
				}
			}
		],
		"views": {
			"explorer": [
				{
					"id": "exportall.view",
					"name": "TypeScript - Export View"
				}
			]
		},
		"viewsWelcome": [
			{
				"view": "exportall.view",
				"contents": "There are currently no TypeScript folder listeners"
			}
		]
	},
	"scripts": {
		"vscode:prepublish": "npm run compile",
		"compile": "tsc -p ./",
		"watch": "tsc -watch -p ./",
		"postinstall": "node ./node_modules/vscode/bin/install",
		"test": "npm run compile && node ./node_modules/vscode/bin/test"
	},
	"devDependencies": {
		"@types/mocha": "^2.2.42",
		"@types/node": "^10.17.24",
		"tslint": "^5.20.1",
		"typescript": "^3.9.3",
		"vscode": "^1.1.37"
	}
}
